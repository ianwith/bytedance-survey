{"version":3,"sources":["utils/api.js","utils/cookie.js","pages/FormListView.js","components/FormQuestionChoiceCreateInput.js","components/FormQuestionCreateInput.js","components/FormCreateInput.js","pages/FormCreateView.js","components/QuestionDetail.js","pages/FormDetailView.js","App.js","reportWebVitals.js","index.js"],"names":["csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","req","endpoint","options","request","Request","headers","fetch","then","res","json","get","post","data","method","body","JSON","stringify","FormListView","useRouteMatch","url","path","useState","forms","setForms","useEffect","catch","error","console","log","href","className","map","item","to","id","title","FormQuestionChoiceCreateInput","index","handleChoiceChange","value","choice_text","onChange","e","target","placeholder","type","FormQuestionCreateInput","handleQuestionChange","handleQuestionChoiceChange","handleAddChoices","choiceId","text","choices","onClick","FormCreateInput","description","handleTitleChange","handleDescChange","FormCreateView","setTitle","setDescription","questions","setQuestions","history","useHistory","newQuestions","slice","findIndex","question_text","newchoices","cIndex","push","cuid","onSubmit","preventDefault","val","concat","htmlType","Option","Select","QuestionDetail","answeredChoice","handleSelectChange","defaultValue","FormDetailView","useParams","formData","setFormData","userName","setUserName","userEmail","setUserEmail","answers","setAnswers","answered","setAnswered","answer","find","ans","question","choice","qid","newAnswers","block","form","user_name","user_email","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4RAEA,IAAMA,ECFC,SAAmBC,GACxB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAMH,EAASC,EAAQE,GAAGE,OAE1B,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACzDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,EDXSU,CAAU,aAI5B,SAASC,EAAIC,EAAUC,GACrB,IAAMC,EAAU,IAAIC,QAAJ,UAHD,0CAGC,OACAH,GACd,CACEI,QAAS,CACP,cAAelB,EACf,eAAgB,sBAItB,OAAOmB,MAAMH,EAASD,GACnBK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAGd,SAASC,EAAIT,GAClB,OAAOD,EAAIC,GAGN,SAASU,EAAKV,EAAUW,GAC7B,OAAOZ,EAAIC,EACT,CACEY,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,KEpBZ,SAASK,IAAgB,IAAD,EACjBC,cAAdC,EAD+B,EAC/BA,IAD+B,KAC1BC,KACeC,mBAAS,KAFE,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAYrC,OATAC,qBAAU,WACRd,EAAI,UACDH,MAAK,SAAAK,GACJW,EAASX,MAEVa,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,IAED,iCACE,mBAAGG,KAAK,SAAR,yBACA,qBAAKC,UAAU,YAAf,SACE,6BAEIR,EAAMS,KAAI,SAAAC,GAAI,OACZ,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAKd,GAAL,OAAWa,EAAKE,IAAxB,SACGF,EAAKG,SAFDH,EAAKE,c,8BCzBb,SAASE,EAAT,GAA6E,IAApCxB,EAAmC,EAAnCA,KAAMyB,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAInE,OACE,kCACE,4CACUD,EADV,IAEE,uBACEE,MAAO3B,EAAK4B,YACZC,SATa,SAACC,GACpBJ,EAAmB1B,EAAKsB,GAAIQ,EAAEC,OAAOJ,QAS/BK,YAAY,oBACZC,KAAK,OACLzD,KAAK,qBCXA,SAAS0D,EAAT,GAMX,IALFlC,EAKC,EALDA,KACAyB,EAIC,EAJDA,MACAU,EAGC,EAHDA,qBACAC,EAEC,EAFDA,2BACAC,EACC,EADDA,iBAKMX,EAAqB,SAACY,EAAUC,GACpCH,EAA2BpC,EAAKsB,GAAIgB,EAAUC,IAKhD,OACE,oCACE,8CACYd,EADZ,SAEE,uBACEE,MAAO3B,EAAKuC,KACZV,SAfa,SAACC,GACpBK,EAAqBnC,EAAKsB,GAAIQ,EAAEC,OAAOJ,QAejCK,YAAY,sBACZC,KAAK,OACLzD,KAAK,qBAIPwB,EAAKwC,QAAQrB,KAAI,SAACC,EAAMK,GAAP,OACf,cAACD,EAAD,CAEEC,MAAOA,EAAQ,EACfzB,KAAMoB,EACNM,mBAAoBA,GAHfN,EAAKE,OAOhB,cAAC,IAAD,CAAQW,KAAK,SAASQ,QAzBP,WACjBJ,EAAiBrC,EAAKsB,KAwBpB,2BCxCS,SAASoB,EAAT,GAAuF,IAA5DnB,EAA2D,EAA3DA,MAAOoB,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,iBAC/E,OACE,oCACE,mBAAG3B,UAAU,sBAAb,8BACA,gDAEE,uBACES,MAAOJ,EACPM,SAAUe,EACVZ,YAAY,cACZC,KAAK,OACLzD,KAAK,aAGT,sDAEE,uBACEmD,MAAOgB,EACPd,SAAUgB,EACVb,YAAY,oBACZC,KAAK,OACLzD,KAAK,sBCdA,SAASsE,IAAkB,IAAD,EACbrC,mBAAS,IADI,mBAChCc,EADgC,KACzBwB,EADyB,OAEDtC,mBAAS,IAFR,mBAEhCkC,EAFgC,KAEnBK,EAFmB,OAGLvC,mBAAS,IAHJ,mBAGhCwC,EAHgC,KAGrBC,EAHqB,KAIjCC,EAAUC,cAqBVjB,EAAuB,SAACb,EAAIiB,GAChC,IAAMc,EAAeJ,EAAUK,QACzB7B,EAAQ4B,EAAaE,WAAU,SAAAnC,GAAI,OAAIA,EAAKE,KAAOA,KACzD+B,EAAa5B,GAAO+B,cAAgBjB,EACpCW,EAAaG,IAGTjB,EAA6B,SAACd,EAAIgB,EAAUC,GAChD,IAAMc,EAAeJ,EAAUK,QACzB7B,EAAQ4B,EAAaE,WAAU,SAAAnC,GAAI,OAAIA,EAAKE,KAAOA,KACnDkB,EAAUa,EAAa5B,GAAOe,QAC9BiB,EAAU,YAAOjB,GACjBkB,EAASD,EAAWF,WAAU,SAAAnC,GAAI,OAAIA,EAAKE,KAAOgB,KACxDmB,EAAWC,GAAQ9B,YAAcW,EACjCc,EAAa5B,GAAOe,QAAUiB,EAC9BP,EAAaG,IAYThB,EAAmB,SAACf,GACxB,IAAM+B,EAAeJ,EAAUK,QACzB7B,EAAQ4B,EAAaE,WAAU,SAAAnC,GAAI,OAAIA,EAAKE,KAAOA,KACzD+B,EAAa5B,GAAOe,QAAQmB,KAAK,CAC/BrC,GAAIsC,MACJhC,YAAa,KAEfsB,EAAaG,IAEf,OACE,iCACE,cAAC,IAAD,CAAMhC,GAAG,IAAT,+BACA,qBAAKH,UAAU,YAAf,SACE,uBAAM2C,SA5DS,SAAC/B,GACpBA,EAAEgC,iBACF/D,EAAK,SAAU,CACbwB,QACAoB,cACAM,cACCtD,MAAK,SAACK,GACPmD,EAAQQ,KAAR,WAAiB3D,EAAKsB,SAqDpB,UACE,cAACoB,EAAD,CACEnB,MAAOA,EACPoB,YAAaA,EACbC,kBAtDgB,SAACd,GACzB,IAAMiC,EAAMjC,EAAEC,OAAOJ,MACrBoB,EAASgB,IAqDDlB,iBAlDe,SAACf,GACxB,IAAMiC,EAAMjC,EAAEC,OAAOJ,MACrBqB,EAAee,MAmDPd,EAAU9B,KAAI,SAACC,EAAMK,GAAP,OACZ,cAACS,EAAD,CAEET,MAAOA,EAAQ,EACfzB,KAAMoB,EACNe,qBAAsBA,EACtBC,2BAA4BA,EAC5BC,iBAAkBA,GALbjB,EAAKE,OAShB,cAAC,IAAD,CAAQW,KAAK,SAASQ,QAzCV,SAACX,GACnB,IAAMuB,EAAeJ,EAAUe,OAAO,CACpC1C,GAAIsC,MACJJ,cAAe,GACfhB,QAAS,KAEXU,EAAaG,IAmCP,0BACA,qBAAKnC,UAAU,sBAAf,SACE,cAAC,IAAD,CAAQe,KAAK,UAAUgC,SAAS,SAAhC,8B,oBC5FJC,EAAWC,IAAXD,OAEO,SAASE,EAAT,GAAuE,IAA7CpE,EAA4C,EAA5CA,KAAMqE,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,mBAI7D,OACE,oCACE,6BAAKtE,EAAKwD,gBACRa,EACA,iDAAoBA,EAAezC,YAAnC,OAEA,eAAC,IAAD,CAAQ2C,aAAc,EAAG1C,SATd,SAACF,GAChB2C,EAAmB3C,IAQf,UACE,cAACuC,EAAD,CAAQvC,MAAO,EAAf,qCAIE3B,EAAKwC,QAAQrB,KAAI,SAAAC,GAAI,OACnB,cAAC8C,EAAD,CAAQvC,MAAOP,EAAKE,GAApB,SACGF,EAAKQ,uBCdP,SAAS4C,IAAkB,IAChClD,EAAOmD,cAAPnD,GAD+B,EAEPb,qBAFO,mBAEhCiE,EAFgC,KAEtBC,EAFsB,OAGPlE,mBAAS,IAHF,mBAGhCmE,EAHgC,KAGtBC,EAHsB,OAILpE,mBAAS,IAJJ,mBAIhCqE,EAJgC,KAIrBC,EAJqB,OAKTtE,mBAAS,IALA,mBAKhCuE,EALgC,KAKvBC,EALuB,OAMPxE,oBAAS,GANF,mBAMhCyE,EANgC,KAMtBC,EANsB,KAOvCvE,qBAAU,WACRd,EAAI,SAAD,OAAUwB,IACV3B,MAAK,SAAAK,GACJ2E,EAAY3E,MAEba,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,IAyCH,OAAK4D,EAQH,iCACE,cAAC,IAAD,CAAMrD,GAAG,IAAT,+BACA,0BAASH,UAAU,YAAnB,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BwD,EAASnD,QACtC,mBAAGL,UAAU,oBAAb,SAAkCwD,EAAS/B,iBAE7C,kCACE,6BAEI+B,EAASzB,UAAU9B,KAAI,SAACC,EAAMK,GAC5B,IACI4C,EADEe,EAASJ,EAAQK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAanE,EAAKE,MAKzD,OAHI4D,GAAYE,IACdf,EAAiBjD,EAAKoB,QAAQ6C,MAAK,SAAAC,GAAG,OAAIA,EAAIhE,KAAO8D,EAAOI,WAG5D,2CACY/D,EAAQ,EADpB,IAEE,cAAC2C,EAAD,CAAgBpE,KAAMoB,EAAMiD,eAAgBA,EAAgBC,mBAAoB,SAAC3C,IAlExE,SAAC8D,EAAK9D,GAC/B,IAAM+D,EAAaV,EAAQ1B,QACrB7B,EAAQiE,EAAWnC,WAAU,SAAAnC,GAAI,OAAIA,EAAKmE,WAAaE,KACzDhE,GAAS,EACXiE,EAAWjE,GAAO+D,OAAS7D,EAE3B+D,EAAW/B,KAAK,CACd4B,SAAUE,EACVD,OAAQ7D,IAGZsD,EAAWS,GAwDOpB,CAAmBlD,EAAKE,GAAIK,QAHvBP,EAAKE,WAYxB,oCACE,uDAEE,uBACEK,MAAOiD,EACP/C,SAnEiB,SAACC,GAC5B+C,EAAY/C,EAAEC,OAAOJ,QAmEXK,YAAY,kBACZC,KAAK,OACLzD,KAAK,iBAGT,wDAEE,uBACEmD,MAAOmD,EACPjD,SAzEkB,SAACC,GAC7BiD,EAAajD,EAAEC,OAAOJ,QAyEZK,YAAY,mBACZC,KAAK,OACLzD,KAAK,qBAIT0G,EAAW,KACX,cAAC,IAAD,CAAQjD,KAAK,UAAU0D,OAAK,EAAClD,QA7EpB,WACf1B,QAAQC,IAAIgE,GACZjF,EAAK,aAAc,CACjB6F,KAAMtE,EACNuE,UAAWjB,EACXkB,WAAYhB,EACZE,YAECrF,MAAK,SAAAK,GACJmF,GAAY,GACZF,EAAWjF,EAAKgF,YAEjBnE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAgEV,iCA1DJ,6C,OCpCSiF,MAlBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,qBAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOxF,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOyF,OAAK,EAACzF,KAAK,IAAlB,SACE,cAACH,EAAD,MAEF,cAAC,IAAD,CAAOG,KAAK,OAAZ,SACE,cAAC,EAAD,YCXK0F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzG,MAAK,YAAkD,IAA/C0G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlI,SAASmI,eAAe,SAM1BX,K","file":"static/js/main.c1b4ce48.chunk.js","sourcesContent":["import { getCookie } from './cookie'\n\nconst csrftoken = getCookie('csrftoken');\n\nconst BASE_URL = 'http://localhost:8000/survey_form/api/'\n\nfunction req(endpoint, options) {\n  const request = new Request(\n    `${BASE_URL}${endpoint}`,\n    {\n      headers: {\n        'X-CSRFToken': csrftoken,\n        'Content-Type': 'application/json'\n      }\n    }\n  );\n  return fetch(request, options)\n    .then(res => res.json())\n}\n\nexport function get(endpoint) {\n  return req(endpoint)\n}\n\nexport function post(endpoint, data) {\n  return req(endpoint,\n    {\n      method: 'POST',\n      body: JSON.stringify(data),\n    })\n}\n","export function getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  Link,\n  useRouteMatch\n} from 'react-router-dom'\nimport cuid from 'cuid'\nimport { get } from '../utils/api'\n\nexport default function FormListView() {\n  let { url, path } = useRouteMatch()\n  const [forms, setForms] = useState([])\n  useEffect(() => {\n    get('forms/')\n      .then(data => {\n        setForms(data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n  return (\n    <main>\n      <a href=\"create\">Create Form</a>\n      <div className=\"App--wrap\">\n        <ul>\n          {\n            forms.map(item => \n              <li key={item.id}>\n                <Link to={`${url}${item.id}`}>\n                  {item.title}\n                </Link>\n              </li>\n            )\n          }\n        </ul>\n      </div>\n    </main>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nexport default function FormQuestionChoiceCreateInput({ data, index, handleChoiceChange }) {\n  const handleChange = (e) => {\n    handleChoiceChange(data.id, e.target.value)\n  }\n  return (\n    <section>\n      <label>\n        Choice {index}:\n        <input\n          value={data.choice_text}\n          onChange={handleChange}\n          placeholder=\"Input Choice Text\"\n          type=\"text\"\n          name=\"choice_text\"\n        />\n      </label>\n    </section>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Button } from 'antd'\nimport FormQuestionChoiceCreateInput from './FormQuestionChoiceCreateInput'\n\nexport default function FormQuestionCreateInput({\n  data,\n  index,\n  handleQuestionChange,\n  handleQuestionChoiceChange,\n  handleAddChoices\n}) {\n  const handleChange = (e) => {\n    handleQuestionChange(data.id, e.target.value)\n  }\n  const handleChoiceChange = (choiceId, text) => {\n    handleQuestionChoiceChange(data.id, choiceId, text)\n  }\n  const addChoices = () => {\n    handleAddChoices(data.id)\n  }\n  return (\n    <section>\n      <label>\n        Question {index} Text:\n        <input\n          value={data.text}\n          onChange={handleChange}\n          placeholder=\"Input Question Text\"\n          type=\"text\"\n          name=\"question_text\"\n        />\n      </label>\n      {\n        data.choices.map((item, index) => (\n          <FormQuestionChoiceCreateInput\n            key={item.id}\n            index={index + 1}\n            data={item}\n            handleChoiceChange={handleChoiceChange}\n          />\n        ))\n      }\n      <Button type='dashed' onClick={addChoices}>Add choice</Button>\n    </section>\n  )\n}","import React, { useState, useEffect } from 'react'\n\nexport default function FormCreateInput({ title, description, handleTitleChange, handleDescChange }) {\n  return (\n    <section>\n      <p className=\"FormCreation--title\">Create Your Form</p>\n      <label>\n        Form Title:\n        <input\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Input Title\"\n          type=\"text\"\n          name=\"title\"\n        />\n      </label>\n      <label>\n        Form Description:\n        <input\n          value={description}\n          onChange={handleDescChange}\n          placeholder=\"Input Description\"\n          type=\"text\"\n          name=\"description\"\n        />\n      </label>\n    </section>\n  )\n}","import './FormCreateView.css'\nimport React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Button } from 'antd'\nimport cuid from 'cuid';\nimport { post } from '../utils/api'\nimport FormQuestionCreateInput from '../components/FormQuestionCreateInput'\nimport FormCreateInput from '../components/FormCreateInput'\n\nexport default function FormCreateView() {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [questions, setQuestions] = useState([])\n  const history = useHistory()\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    post('forms/', {\n      title,\n      description,\n      questions\n    }).then((data) => {\n      history.push(`/${data.id}`)\n    })\n  }\n  const handleTitleChange = (e) => {\n    const val = e.target.value\n    setTitle(val)\n  }\n\n  const handleDescChange = (e) => {\n    const val = e.target.value\n    setDescription(val)\n  }\n\n  const handleQuestionChange = (id, text) => {\n    const newQuestions = questions.slice()\n    const index = newQuestions.findIndex(item => item.id === id)\n    newQuestions[index].question_text = text\n    setQuestions(newQuestions)\n  }\n\n  const handleQuestionChoiceChange = (id, choiceId, text) => {\n    const newQuestions = questions.slice()\n    const index = newQuestions.findIndex(item => item.id === id)\n    const choices = newQuestions[index].choices\n    const newchoices = [...choices]\n    const cIndex = newchoices.findIndex(item => item.id === choiceId)\n    newchoices[cIndex].choice_text = text\n    newQuestions[index].choices = newchoices\n    setQuestions(newQuestions)\n  }\n\n  const addQuestion = (e) => {\n    const newQuestions = questions.concat({\n      id: cuid(),\n      question_text: '',\n      choices: []\n    })\n    setQuestions(newQuestions)\n  }\n\n  const handleAddChoices = (id) => {\n    const newQuestions = questions.slice()\n    const index = newQuestions.findIndex(item => item.id === id)\n    newQuestions[index].choices.push({\n      id: cuid(),\n      choice_text: ''\n    })\n    setQuestions(newQuestions)\n  }\n  return (\n    <main>\n      <Link to=\"/\">Back to Form List</Link>\n      <div className=\"App--wrap\">\n        <form onSubmit={handleSubmit}>\n          <FormCreateInput\n            title={title}\n            description={description}\n            handleTitleChange={handleTitleChange}\n            handleDescChange={handleDescChange}\n          />\n          {\n            questions.map((item, index) => (\n              <FormQuestionCreateInput\n                key={item.id}\n                index={index + 1}\n                data={item}\n                handleQuestionChange={handleQuestionChange}\n                handleQuestionChoiceChange={handleQuestionChoiceChange}\n                handleAddChoices={handleAddChoices}\n              />\n            ))\n          }\n          <Button type='dashed' onClick={addQuestion}>Add question</Button>\n          <div className=\"FormCreation-submit\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </div>\n        </form>\n      </div>\n    </main>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Select } from 'antd'\n\nconst { Option } = Select;\n\nexport default function QuestionDetail({ data, answeredChoice, handleSelectChange }) {\n  const onChange = (value) => {\n    handleSelectChange(value)\n  }\n  return (\n    <section>\n      <h2>{data.question_text}</h2>\n      { answeredChoice ? (\n        <div>You answered: {answeredChoice.choice_text} </div>\n      ) : (\n        <Select defaultValue={0} onChange={onChange}>\n          <Option value={0}>\n            Please select an option\n          </Option>\n          {\n            data.choices.map(item => (\n              <Option value={item.id}>\n                {item.choice_text}\n              </Option>\n            ))\n          }\n        </Select>\n      )}\n      \n    </section>\n  )\n}\n","import './FormDetailView.css'\nimport React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button } from 'antd'\nimport cuid from 'cuid'\nimport { get, post } from '../utils/api'\nimport QuestionDetail from '../components/QuestionDetail'\n\nexport default function FormDetailView() {\n  const { id } = useParams()\n  const [formData, setFormData] = useState()\n  const [userName, setUserName] = useState('')\n  const [userEmail, setUserEmail] = useState('')\n  const [answers, setAnswers] = useState([])\n  const [answered, setAnswered] = useState(false)\n  useEffect(() => {\n    get(`forms/${id}`)\n      .then(data => {\n        setFormData(data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n\n  const handleSelectChange = (qid, value) => {\n    const newAnswers = answers.slice()\n    const index = newAnswers.findIndex(item => item.question === qid)\n    if (index >= 0) {\n      newAnswers[index].choice = value\n    } else {\n      newAnswers.push({\n        question: qid,\n        choice: value\n      })\n    }\n    setAnswers(newAnswers)\n  }\n\n  const handleUserNameChange = (e) => {\n    setUserName(e.target.value)\n  }\n\n  const handleUserEmailChange = (e) => {\n    setUserEmail(e.target.value)\n  }\n\n  const onSubmit = () => {\n    console.log(answers)\n    post(`responses/`, {\n      form: id,\n      user_name: userName,\n      user_email: userEmail,\n      answers\n    })\n      .then(data => {\n        setAnswered(true)\n        setAnswers(data.answers)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  if (!formData) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n  return (\n    <main>\n      <Link to=\"/\">Back to Form List</Link>\n      <section className=\"App--wrap\">\n        <div className=\"Form--header\">\n          <h1 className=\"Form--title\">{formData.title}</h1>\n          <p className=\"Form--description\">{formData.description}</p>\n        </div>\n        <section>\n          <ul>\n            {\n              formData.questions.map((item, index) => {\n                const answer = answers.find(ans => ans.question === item.id)\n                let answeredChoice\n                if (answered && answer) {\n                  answeredChoice = item.choices.find(ans => ans.id === answer.choice)\n                }\n                return (\n                  <li key={item.id}>\n                    Question {index + 1}:\n                    <QuestionDetail data={item} answeredChoice={answeredChoice} handleSelectChange={(value) => {\n                      handleSelectChange(item.id, value)\n                    }} />\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </section>\n\n        <section>\n          <label>\n            Tell us your name:\n            <input\n              value={userName}\n              onChange={handleUserNameChange}\n              placeholder=\"Input your name\"\n              type=\"text\"\n              name=\"user_name\"\n            />\n          </label>\n          <label>\n            Tell us your email:\n            <input\n              value={userEmail}\n              onChange={handleUserEmailChange}\n              placeholder=\"Input your email\"\n              type=\"text\"\n              name=\"user_email\"\n            />\n          </label>\n        </section>\n        { answered ? null : (\n          <Button type=\"primary\" block onClick={onSubmit}>Submit answer</Button>\n        ) }\n      </section>\n    </main>\n  )\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport FormListView from './pages/FormListView'\nimport FormCreateView from './pages/FormCreateView'\nimport FormDetailView from './pages/FormDetailView'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename=\"/survey_form/forms\">\n      <Switch>\n        <Route path=\"/create\">\n          <FormCreateView />\n        </Route>\n        <Route exact path=\"/\">\n          <FormListView />\n        </Route>\n        <Route path='/:id'>\n          <FormDetailView />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}